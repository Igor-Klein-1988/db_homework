// теория https://western-appeal-39b.notion.site/DB-7-Oct-23-2023-f8f7456b6ef14c2895d0d9daa58e7af1?pvs=4
// 1. Вывести названия двух произвольных треков с тегом `new`
db.tracks.aggregate([{ $match: { tags: "popular" } }, { $limit: 2 }]);
// 2. Вывести имя юзера с самым минимальным балансом
db.users.aggregate([
  { $sort: { balance: 1 } },
  { $limit: 1 },
  { $project: { fullname: 1, _id: 0 } },
]);
// 3. Вывести имена юзеров, у которых есть треки
db.users.aggregate([
  {
    $lookup: {
      from: "tracks",
      localField: "_id",
      foreignField: "author_id",
      as: "tracks",
    },
  },
  {
    $match: {
      $expr: { $gt: [{ $size: "$tracks" }, 0] },
    },
  },
  { $project: { fullname: 1, _id: 0 } },
]);
// 4. Используя метод `aggregate()`, вывести ко-во юзеров с балансом до `1000` EUR
db.users.aggregate(
  { $match: { balance: { $lte: 1000 } } },
  { $count: "poor_users" }
);
// 5. Также очень коротко опишите, как работает агрегация в MongoDB

// Агрегация в MongoDB - это процесс обработки данных в коллекциях для получения сводной
// информации или изменения структуры данных. Это позволяет нам выполнять разнообразные
//операции, такие как фильтрация, группировка, сортировка и вычисления на больших объемах
// данных.

// Для работы с агрегацией в MongoDB используются агрегационные операторы и агрегационные
//  конвейеры. Конвейер представляет собой последовательность этапов, в каждом из которых
//  выполняется определенная операция. Этапы могут включать в себя операции, такие как
//  $match для фильтрации данных, $group для группировки данных, $project для проекции
//  полей и другие.

// В процессе агрегации данные проходят через эти этапы по порядку, и на каждом этапе
// выполняется определенное преобразование. Например, на первом этапе можно отфильтровать
// только нужные документы, а на втором этапе можно сгруппировать их по какому-то полю.

// Конечная цель агрегации - получить желаемый набор данных или результат, который можно
//  использовать в дальнейшей обработке или анализе. Агрегация позволяет выполнять сложные
//  операции с данными, что делает ее мощным инструментом для аналитики, отчетности и
//  манипуляции с данными в MongoDB.
